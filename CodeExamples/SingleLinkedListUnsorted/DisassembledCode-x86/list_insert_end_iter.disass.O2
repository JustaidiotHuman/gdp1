Reading symbols from bin/singleLinkedIntList_functional_tail_recursive_demo...fertig.
Dump of assembler code for function list_insert_end_iter:
   0x00000820 <+0>:	push   %esi
   0x00000821 <+1>:	push   %ebx
   0x00000822 <+2>:	sub    $0x4,%esp
   0x00000825 <+5>:	mov    0x10(%esp),%esi
   0x00000829 <+9>:	mov    0x14(%esp),%edx
   0x0000082d <+13>:	test   %esi,%esi
   0x0000082f <+15>:	mov    %esi,%ebx
   0x00000831 <+17>:	jne    0x83a <list_insert_end_iter+26>
   0x00000833 <+19>:	jmp    0x858 <list_insert_end_iter+56>
   0x00000835 <+21>:	lea    0x0(%esi),%esi
   0x00000838 <+24>:	mov    %eax,%ebx
   0x0000083a <+26>:	mov    0x4(%ebx),%eax
   0x0000083d <+29>:	test   %eax,%eax
   0x0000083f <+31>:	jne    0x838 <list_insert_end_iter+24>
   0x00000841 <+33>:	sub    $0xc,%esp
   0x00000844 <+36>:	push   %edx
   0x00000845 <+37>:	call   0x6e0 <list_create_node>
   0x0000084a <+42>:	mov    %eax,0x4(%ebx)
   0x0000084d <+45>:	add    $0x14,%esp
   0x00000850 <+48>:	mov    %esi,%eax
   0x00000852 <+50>:	pop    %ebx
   0x00000853 <+51>:	pop    %esi
   0x00000854 <+52>:	ret    
   0x00000855 <+53>:	lea    0x0(%esi),%esi
   0x00000858 <+56>:	mov    %edx,0x10(%esp)
   0x0000085c <+60>:	add    $0x4,%esp
   0x0000085f <+63>:	pop    %ebx
   0x00000860 <+64>:	pop    %esi
   0x00000861 <+65>:	jmp    0x6e0 <list_create_node>
End of assembler dump.
